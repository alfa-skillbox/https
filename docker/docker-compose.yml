version: '3.7'
services:
  keycloak:
    image: jboss/keycloak:16.1.1
    container_name: keycloak-local
    networks:
      - common
    environment:
      KEYCLOAK_USER: 'admin'
      KEYCLOAK_PASSWORD: 'admin'
      DB_VENDOR: 'h2'
      KEYCLOAK_LOGLEVEL: "INFO"
      SERVER_KEYSTORE_PASSWORD: 'keycloak-password'
      KEYCLOAK_IMPORT: "/tmp/example-realm.json"
    volumes:
      - ./imports/keycloak/keycloak.crt:/etc/x509/https/tls.crt
      - ./imports/keycloak/keycloak.key.pem:/etc/x509/https/tls.key
      - ./imports/keycloak/realm-config.json:/tmp/example-realm.json
    ports:
      - "8443:8443"

  resource-server:
    image: "ru.alfabank.skillbox.examples/resource-server:0.0.1-snapshot"
    container_name: resource-server
    networks:
      - common
    environment:
      KEYSTORE_PATH: '/etc/https/keystore.jks'
      KEYSTORE_PASSWORD: 'resource-server-password'
      KEYSTORE_TYPE: 'JKS'
      SPRING_PROFILES_ACIVE: local
      JAVA_OPTS: "
            -Djavax.net.ssl.trustStore=/etc/https/truststore.jks
            -Djavax.net.ssl.trustStorePassword=resource-server-password
            -Djavax.net.ssl.trustStoreType=JKS
            -Djavax.net.debug=all"
    volumes:
      - ./imports/resource-server/truststore.jks:/etc/https/truststore.jks
      - ./imports/resource-server/keystore.jks:/etc/https/keystore.jks
    ports:
      - "8080:8080"

  gateway:
    image: "ru.alfabank.skillbox.examples/gateway:0.0.1-snapshot"
    container_name: gateway
    networks:
      - common
    environment:
      SPRING_PROFILES_ACIVE: local
      JAVA_OPTS: "
            -Djavax.net.ssl.trustStore=/etc/https/truststore.jks
            -Djavax.net.ssl.trustStorePassword=gateway-password
            -Djavax.net.ssl.trustStoreType=JKS
            -Djavax.net.debug=all"
    volumes:
      - ./imports/gateway/truststore.jks:/etc/https/truststore.jks
    ports:
      - "8082:8080"

  postgre:
    image: 'postgres:12-alpine'
    restart: always
    networks:
      - common
    command: >
      -c ssl=on
      -c ssl_cert_file=/var/lib/postgresql/server.crt
      -c ssl_key_file=/var/lib/postgresql/server.key
    environment:
      POSTGRES_DB: alfa_skillbox_https_resource_server_db
      POSTGRES_USER: postgre
      POSTGRES_PASSWORD: postgre
    volumes:
      - ./imports/postgre/init/init-db-schema.sql:/docker-entrypoint-initdb.d/init-db-schema.sql
      - ./data/postgre:/var/lib/postgresql/data
#  solved postgres using ssl problem with https://stackoverflow.com/questions/55072221/deploying-postgresql-docker-with-ssl-certificate-and-key-with-volumes
      - ./imports/postgre/server.crt:/var/lib/postgresql/server.crt:ro
      - ./imports/postgre/server.key:/var/lib/postgresql/server.key:ro
    ports:
      - '5432:5432'
#  adminer:
#    image: adminer
#    restart: always
#    networks:
#      - common
#    ports:
#      - 9999:8080

volumes:
  data.postgre:

networks:
  common: