server:
  port: 8081
host: 'localhost'
# This is keycloak from docker-compose.yml
keycloak.uri: 'https://${host}:8443'

# Конфигурация SSL через Spring properties
# Для кастомной конфигурации SSL см. https://habr.com/ru/company/dbtc/blog/487318/
# enable/disable https
server.ssl.enabled: true
# keystore format
server.ssl.keyStoreType: JKS
# keystore location
server.ssl.keyStore: "classpath:resource-server.keystore.jks"
# keystore password
server.ssl.keyStorePassword: "resource-server-password"
# SSL protocol to use
server.ssl.protocol: TLS
# Enabled SSL protocols
server.ssl.enabledProtocols: TLSv1.2
#trust store location
#server.ssl.trustStore: classpath:resource-server.truststore.jks
#trust store password
#server.ssl.trustStorePassword: ""
#trust store format
#server.ssl.trustStoreType: JKS

spring:
  datasource:
    name: "alfa-skillbox-https-resource-server"

#  disable	    only try a non-SSL connection
#  allow	    first try a non-SSL connection; if that fails, try an SSL connection
#  prefer       (default)	first try an SSL connection; if that fails, try a non-SSL connection
#  require	    only try an SSL connection. If a root CA file is present, verify the certificate in the same way as if verify-ca was specified
#  verify-ca	only try an SSL connection, and verify that the server certificate is issued by a trusted CA.
#  verify-full	only try an SSL connection, verify that the server certificate is issued by a trusted CA and that the server hostname matches that in the certificate.

    url: "jdbc:postgresql://${host}:5432/alfa_skillbox_https_resource_server_db?ssl=true&sslmode=require"
    username: 'postgres'
    password: 'postgres'
    driver-class-name: 'org.postgresql.Driver'
  jpa:
    hibernate.ddl-auto: validate
    show-sql: true
    generate-ddl: false
    properties:
      hibernate.dialect: 'org.hibernate.dialect.PostgreSQL95Dialect'
      hibernate.current_session_context_class: 'org.springframework.orm.hibernate5.SpringSessionContext'
      hibernate.connection.characterEncoding: "UTF-8"
      hibernate.connection.charSet: "UTF-8"
      hibernate.temp.use_jdbc_metadata_defaults: "true"
      hibernate.physical_naming_strategy: "org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl"
# Keycloak interaction properties
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: '${keycloak.uri}/auth/realms/alfa-skillbox-https/protocol/openid-connect/certs'
logging:
  level:
    org.springfaramework: DEBUG
    org.springframework.web.client: DEBUG
    org.springframework.security.oauth2.client: DEBUG
    org.springframework.security.oauth2.server.resource: DEBUG
    org.springfaramework.orm.jpa.JpaTransactionManager: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.desriptor.sql.BasicBinder: TRACE

# External json validation service properties
feign:
  client:
    config:
      rest-json-validation:
        connectTimeout: 2000
        readTimeout: 2000
  clients:
    rest-json-validation:
      retryer:
        period: 1000
        maxPeriod: 1000
      name: 'rest-json-validation'
      url: 'https://assertible.com'
      path: 'json'